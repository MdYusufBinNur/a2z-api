<?php


namespace App\Repositories;


use App\DbModels\MetaAndSlug;
use App\Repositories\Contracts\CategoryRepository;
use App\Repositories\Contracts\SubCategoryRepository;
use ArrayAccess;

class EloquentCategoryRepository extends EloquentBaseRepository implements CategoryRepository
{
    /**
     * inherit doc
     * @param array $searchCriteria
     * @param bool $withTrashed
     * @return mixed
     */
    public function findBy(array $searchCriteria = [], $withTrashed = false)
    {
        $searchCriteria = $this->applyFilterInCategorySearch($searchCriteria);

        return parent::findBy($searchCriteria, $withTrashed); // TODO: Change the autogenerated stub
    }

    /**
     * inherit doc
     * @param array $data
     * @return ArrayAccess
     */
    public function save(array $data): \ArrayAccess
    {
        $category = parent::save($data);

        $metaAndSlug['type'] = MetaAndSlug::TYPE_CATEGORY;
        $metaAndSlug['routePath'] = MetaAndSlug::ROUTE_PATH_CATEGORY;
        $metaAndSlug['keywords'] = $category->name;
        $metaAndSlug['resourceId'] = $category->id;
        $metaAndSlug['slugPath'] = $category->slug;

        $category->metaAndSlug()->create($metaAndSlug);

        return $category;
    }

    /**
     * shorten the search based on search criteria
     *
     * @param $searchCriteria
     * @return mixed
     */
    private function applyFilterInCategorySearch($searchCriteria)
    {
        if (isset($searchCriteria['query'])) {
            $searchCriteria['id'] = $this->model
                ->where('name', 'like', '%'.$searchCriteria['query'].'%')
                ->pluck('id')->toArray();
            unset($searchCriteria['query']);
        }

        if (isset($searchCriteria['subCategoryId'])) {
            $subCategoryRepository = app(SubCategoryRepository::class);
            $searchCriteria['id'] = $subCategoryRepository->model->select('categoryId')
                ->where('id', $searchCriteria['subCategoryId'])
                ->pluck('categoryId')->toArray();
            unset($searchCriteria['subCategoryId']);
        }

        if (isset($searchCriteria['id'])) {
            $searchCriteria['id'] = is_array($searchCriteria['id']) ? implode(",", array_unique($searchCriteria['id'])) : $searchCriteria['id'];
        }

        return $searchCriteria;
    }


}
